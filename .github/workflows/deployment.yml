name: Deploy to Vercel

on:
  push:
    branches:
      - main

jobs:
  install_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install dependencies and test
      run: |
        cd client
        npm i
        npm test --coverage

        cd ../api
        npm i
        npm test --coverage

  build_and_deploy:
    needs: install_and_test
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Deploy to Vercel
      run: |
        npm install -g vercel@latest
        npm install -g pnpm@latest

        cd client
        npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN_CLIENT }}
        npx vercel pull --yes --token=${{ secrets.VERCEL_TOKEN_CLIENT }}
        npx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN_CLIENT }}

        cd ../api
        npx vercel build --prod --token=${{ secrets.VERCEL_TOKEN_API }}
        npx vercel pull --yes --token=${{ secrets.VERCEL_TOKEN_API }}
        npx vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN_API }}

        cd ..
        echo "## Code Coverage\n" >> README.md
        echo "### API\n" >> README.md
        echo "[![API Code Coverage](link_vers_rapport_de_couverture_api)](link_vers_rapport_de_couverture_api)\n" >> README.md
        echo "### Client\n" >> README.md
        echo "[![Client Code Coverage](link_vers_rapport_de_couverture_client)](link_vers_rapport_de_couverture_client)\n" >> README.md
